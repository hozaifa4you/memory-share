// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserType {
  ADMIN
  User
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userType  UserType @default(User)
  name      String
  username  String   @unique
  email     String   @unique
  phone     String?  @unique
  password  String
  avatar    String?
  address   Address? @relation(fields: [addressId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  memories  Memory[]
  comment   Comment[]
  addressId String?   @db.ObjectId
}

model Memory {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  slug      String    @unique
  title     String
  body      String
  images    String[]
  likes     String[]  @db.ObjectId
  comments  Comment[]
  saved     String[]  @db.ObjectId
  place     Place?    @relation(fields: [placeId], references: [id])
  tags      String[]
  category  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  user    User?   @relation(fields: [userId], references: [id])
  userId  String? @db.ObjectId
  placeId String  @db.ObjectId
}

model Address {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  street  String
  city    String
  state   String
  country String
  zip     String
  user    User[]
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User?   @relation(fields: [userId], references: [id])
  userId String? @db.ObjectId

  memory   Memory? @relation(fields: [memoryId], references: [id])
  memoryId String? @db.ObjectId
}

model Place {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  street  String?
  city    String?
  state   String?
  country String?
  zip     String?
  memory  Memory[]
}
